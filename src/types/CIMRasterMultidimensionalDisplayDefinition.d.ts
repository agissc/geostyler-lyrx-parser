/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type CIMRasterMultidimensionalDisplayDefinition = CIMObject & {
  /**
   * Gets or sets the name of the variable.
   */
  variableName?: null | string;
  /**
   * Gets or sets the time value for the current display slice.
   */
  timeValue?: null | TimeExtent;
  /**
   * Gets or sets a value indicating whether the active variable has a range dimension.
   */
  hasRangeDimension?: boolean;
  /**
   * Gets or sets the name of the range dimension.
   */
  rangeDimensionName?: null | string;
  /**
   * Gets or sets the range dimension value for the current display slice.
   */
  rangeDimensionValue?: null | CIMRange;
};
export type TimeExtent = TimeValue & {
  /**
   * Gets or sets the start time of the extent.
   */
  startTime?: string;
  /**
   * Gets or sets the end time of the extent.
   */
  endTime?: string;
  /**
   * Gets or sets a value indicating if the time extent is empty.
   */
  empty?: boolean;
  /**
   * Gets or sets a value indicating if the extent contains a start time. If false the time extent has no lower bound.
   */
  startTimeSpecified?: boolean;
  /**
   * Gets or sets a value indicating if the extent contains an end time. If false the time extent has no upper bound.
   */
  endTimeSpecified?: boolean;
};
export type TimeValue = CIMObject & {
  /**
   * Gets or sets the time zone definition of the time.
   */
  timeReference?: null | TimeReference;
};
export type TimeReference = CIMObject & {
  /**
   * Gets or sets the windows id for the time zone.
   */
  timeZoneNameID?: null | string;
  /**
   * Gets or sets a value indicating if the time reference should honor daylight savings time.
   */
  respectsDaylightSavingTime?: boolean;
  /**
   * Gets or sets a value indicating if the time reference should respect dynamic rules for adjusting with daylight savings time for specific years.
   */
  respectsDynamicAdjustmentRules?: boolean;
};
export type CIMRange = CIMObject & {
  /**
   * Gets or sets the minimum.
   */
  min?: number;
  /**
   * Gets or sets the maximum.
   */
  max?: number;
};

/**
 * Represents the base CIM object class.
 *
 */
export interface CIMObject {}
