/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type CIMScaleFormat = CIMObject & {
  /**
   * Gets or sets the format used to display scale, i.e., 1:20000 or 1 inch equals 5 miles.
   */
  formatType?: ScaleFormatType;
  /**
   * Gets or sets the character(s) used to separate '1' from the scale in an absolute scale, e.g ':' in 1:20000.
   */
  separator?: null | string;
  /**
   * Gets or sets a value indicating whether to reverse the standard order. e.g. [1:1000] becomes [1000:1] and [1 in=10 mi] becomes [10 mi=1 in].
   */
  reverseOrder?: boolean;
  /**
   * Gets or sets the number the scale has to be less than or equal to display decimal places.
   */
  decimalPlacesThreshold?: number;
  /**
   * Gets or sets the number decimal places.
   */
  decimalPlaces?: number;
  /**
   * Gets or sets a value indicating whether to show the thousands separator, e.g., 1:20,000.
   */
  showThousandSeparator?: boolean;
  /**
   * Gets or sets the page units used to display a scale,e.g, the 'inch' in 1 inch=5 miles.
   */
  pageUnits?: null | LinearUnit;
  /**
   * Gets or sets the number preceding the page units in a scale, i.e., the '1' in 1 inch=5 miles.
   */
  pageUnitValue?: number;
  /**
   * Gets or sets the text used for 'equals', e.g, '=' in 1 inch=5 miles.
   */
  equalsSign?: null | string;
  /**
   * Gets or sets the map units used to display a scale, e.g, the 'miles' in 1 inch=5 miles.
   */
  mapUnits?: null | LinearUnit;
  /**
   * Gets or sets a value indicating whether to capitalize the units in the scale string.
   */
  capitalizeUnits?: boolean;
  /**
   * Gets or sets a value indicating whether to abbreviate the units in the scale string.
   */
  abbreviateUnits?: boolean;
};
/**
 * Scale format types.
 */
export type ScaleFormatType = 0 | 1;
export type LinearUnit = Unit & {
  /**
   * Gets the meters per unit.
   */
  metersPerUnit?: number;
};
/**
 * Describes the different types of units.
 */
export type UnitType = 0 | 1 | 2 | 3;

/**
 * Represents the base CIM object class.
 *
 */
export interface CIMObject {}
/**
 * A common base class between all units, linear, area and angular units.
 */
export interface Unit {
  /**
   * Gets the well-known ID of the unit. If the unit is a custom unit, then the factory code will be 0.
   */
  factoryCode?: number;
  /**
   * Gets the well-known text of the unit.
   */
  wkt?: null | string;
  /**
   * Gets the name of the unit.
   */
  name?: null | string;
  /**
   * Gets the conversion factor of the unit.
   */
  conversionFactor?: number;
  /**
   * Gets the type of unit.
   */
  unitType?: UnitType;
}
