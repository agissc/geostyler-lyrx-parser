/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The types of extrusion.
 */
export type ExtrusionType = 0 | 1 | 2 | 3 | 4;
/**
 * Describes the different types of units.
 */
export type UnitType = 0 | 1 | 2 | 3;
/**
 * Visual variable info types.
 *
 */
export type ExpressionReturnType = 0 | 1 | 2;

/**
 * Represents feature extrusion.
 *
 */
export interface CIMFeatureExtrusion {
  /**
   * Gets or sets the extrusion type.
   */
  extrusionType?: ExtrusionType;
  /**
   * Gets or sets the extrusion expression.
   */
  extrusionExpression?: null | string;
  /**
   * Gets or sets the feature layer's extrusion unit.
   */
  extrusionUnit?: null | LinearUnit;
  /**
   * Gets or sets the ExpressionInfo that contains Arcade expression that returns a numeric value.
   */
  extrusionExpressionInfo?: null | CIMExpressionInfo;
}
/**
 * Represents a linear unit of measure used by a Geometry or SpatialReference, or in measurement conversion functions.
 */
export interface LinearUnit {
  /**
   * Gets the well-known ID of the unit. If the unit is a custom unit, then the factory code will be 0.
   */
  factoryCode?: number;
  /**
   * Gets the well-known text of the unit.
   */
  wkt?: null | string;
  /**
   * Gets the name of the unit.
   */
  name?: null | string;
  /**
   * Gets the conversion factor of the unit.
   */
  conversionFactor?: number;
  /**
   * Gets the type of unit.
   */
  unitType?: UnitType;
  /**
   * Gets the meters per unit.
   */
  metersPerUnit?: number;
}
/**
 * Represents the properties required for authoring an Arcade expression.
 */
export interface CIMExpressionInfo {
  /**
   * Gets or sets the human readable text that describes the expression.
   */
  title?: null | string;
  /**
   * Gets or sets the Arcade expression used to evaluate and return the value that a property expects.
   */
  expression?: null | string;
  /**
   * Gets or sets the Name of the expression.
   */
  name?: null | string;
  /**
   * Gets or sets the ReturnType of the expression.
   */
  returnType?: ExpressionReturnType;
}
