/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Describes the different types of units.
 */
export type UnitType = 0 | 1 | 2 | 3;
/**
 * A list of orientation values.
 */
export type Orientation = 0 | 1;

/**
 * Represents the page information associated with a layout.
 */
export interface CIMPage {
  /**
   * Gets or sets the height of the layout in page units.
   */
  height?: number;
  /**
   * Gets or sets a value indicating whether elements should be stretched when the page size is changed.
   */
  stretchElements?: boolean;
  /**
   * Gets or sets the width of the layout in page units.
   */
  width?: number;
  /**
   * Gets or sets the printer preferences for the page.
   */
  printerPreferences?: null | CIMPrinterPreferences;
  /**
   * Gets or sets the page units for the layout.
   */
  units?: null | LinearUnit;
  /**
   * Gets or sets the guides on a layout.
   */
  guides?: CIMGuide[] | null;
  /**
   * Gets or sets a value indicating whether rulers should be displayed on the layout.
   */
  showRulers?: boolean;
  /**
   * Gets or sets a value indicating whether guides should be displayed on the layout.
   */
  showGuides?: boolean;
  /**
   * Gets or sets the smallest ruler division.
   */
  smallestRulerDivision?: number;
  /**
   * Gets or sets the margin for the page.
   */
  margin?: null | CIMMargin;
  /**
   * Gets or sets a value indicating whether the printer margin should be displayed on the layout.
   */
  showMargin?: boolean;
}
/**
 * Represents the printer preferences associated with a layout.
 */
export interface CIMPrinterPreferences {
  /**
   * Gets or sets the printer name.
   */
  printerName?: null | string;
  /**
   * Gets or sets the paper size name.
   */
  paperName?: null | string;
  /**
   * Gets or sets the paper source.
   */
  paperSource?: number;
}
/**
 * Represents a linear unit of measure used by a Geometry or SpatialReference, or in measurement conversion functions.
 */
export interface LinearUnit {
  /**
   * Gets the well-known ID of the unit. If the unit is a custom unit, then the factory code will be 0.
   */
  factoryCode?: number;
  /**
   * Gets the well-known text of the unit.
   */
  wkt?: null | string;
  /**
   * Gets the name of the unit.
   */
  name?: null | string;
  /**
   * Gets the conversion factor of the unit.
   */
  conversionFactor?: number;
  /**
   * Gets the type of unit.
   */
  unitType?: UnitType;
  /**
   * Gets the meters per unit.
   */
  metersPerUnit?: number;
}
/**
 * Represents a guide used to snap elements on a page layout.
 */
export interface CIMGuide {
  /**
   * Gets or sets the position of the guide.
   */
  position?: number;
  /**
   * Gets or sets the horizontal or vertical orientation of the guide.
   */
  orientation?: Orientation;
}
/**
 * Represents a margin to apply around the page.
 *
 */
export interface CIMMargin {
  /**
   * Gets or sets the left margin.
   */
  left?: number;
  /**
   * Gets or sets the right margin.
   */
  right?: number;
  /**
   * Gets or sets the top margin.
   */
  top?: number;
  /**
   * Gets or sets the bottom margin.
   */
  bottom?: number;
}
