/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type CIMFloorAwareMapProperties = CIMObject & {
  /**
   * Gets or sets the properties for the Indoors Sites layer in the map.
   */
  siteLayerProperties?: null | CIMSiteLayerProperties;
  /**
   * Gets or sets the properties for the Indoors Facilities layer in the map.
   */
  facilityLayerProperties?: null | CIMFacilityLayerProperties;
  /**
   * Gets or sets the properties for the Indoors Levels layer in the map.
   */
  levelLayerProperties?: null | CIMLevelLayerProperties;
  /**
   * Gets or sets the default properties for the map's floor filter control.  Used as default when creating new map views.
   */
  defaultFloorFilterSettings?: null | CIMFloorFilterSettings;
};
export type CIMSiteLayerProperties = CIMObject & {
  /**
   * Gets or sets the URI for the Indoors Site layer in the map CIM.
   */
  layerURI?: null | string;
  /**
   * Gets or sets the sublayer ID when the Site layer is a sublayer within a dynamic map service layer.
   */
  subLayerID?: number;
  /**
   * Gets or sets the name of the field containing the site id.
   */
  siteIDField?: null | string;
  /**
   * Gets or sets the name of the field containing the site name.
   */
  nameField?: null | string;
};
export type CIMFacilityLayerProperties = CIMObject & {
  /**
   * Gets or sets the URI for the Indoors Facility layer in the map CIM.
   */
  layerURI?: null | string;
  /**
   * Gets or sets the sublayer ID when the Facility layer is a sublayer within a dynamic map service layer.
   */
  subLayerID?: number;
  /**
   * Gets or sets the name of the field containing the site id (a foreign key back to the Site feature class).
   */
  siteIDField?: null | string;
  /**
   * Gets or sets the name of the field containing the facility id.
   */
  facilityIDField?: null | string;
  /**
   * Gets or sets the name of the field containing the facility name.
   */
  nameField?: null | string;
};
export type CIMLevelLayerProperties = CIMObject & {
  /**
   * Gets or sets the URI for the Indoors Level layer in the map CIM.
   */
  layerURI?: null | string;
  /**
   * Gets or sets the sublayer ID when the Level layer is a sublayer within a dynamic map service layer.
   */
  subLayerID?: number;
  /**
   * Gets or sets the name of the field containing the facility id (a foreign key back to the Facility feature class).
   */
  facilityIDField?: null | string;
  /**
   * Gets or sets the name of the field containing the level id.
   */
  levelIDField?: null | string;
  /**
   * Gets or sets the name of the field containing the level "short" name.
   */
  shortNameField?: null | string;
  /**
   * Gets or sets the name of the field containing the level "long" name.
   */
  longNameField?: null | string;
  /**
   * Gets or sets the name of the field containing the level number.
   */
  levelNumberField?: null | string;
  /**
   * Gets or sets the name of the field containing the vertical order for the level.
   */
  verticalOrderField?: null | string;
};
export type CIMFloorFilterSettings = CIMObject & {
  /**
   * Gets or sets the site ID for the selected site, which is used when filtering layers by SITE_ID (optional).
   */
  selectedSiteID?: null | string;
  /**
   * Gets or sets the facility ID for the selected facility, which is used when filtering layers by FACILITY_ID.
   */
  selectedFacilityID?: null | string;
  /**
   * Gets or sets the level ID for the selected level, which is used when filtering layers by LEVEL_ID or the layer's configured floor-aware properties.
   */
  selectedLevelID?: null | string;
  /**
   * Gets or sets a value indicating whether or not the floor filter is enabled and filtering the displayed content according to the floor filter selections.
   */
  enabled?: boolean;
  /**
   * Gets or sets a value indicating whether the floor filter has been minimized to show only the levels list or if it is showing the full set of breadcrumbs.
   */
  minimized?: boolean;
  /**
   * Gets or sets a value indicating whether the levels lists are showing the long names from the NAME field or showing the short names from the NAME_SHORT field.
   */
  longNames?: boolean;
  /**
   * Gets or sets a value indicating whether the levels portion of the floor filter have been pinned to show the levels lists or the floor filter includes the levels as a breadcrumb dropdown.
   */
  pinnedLevels?: boolean;
  /**
   * Gets or sets the array of facility ids belonging to the selected site (only if just site has been selected).
   */
  siteFacilityIDs?: string[] | null;
  /**
   * Gets or sets the array of level ids belonging to the selected site (only if just site has been selected).
   */
  siteLevelIDs?: string[] | null;
};

/**
 * Represents the base CIM object class.
 *
 */
export interface CIMObject {}
