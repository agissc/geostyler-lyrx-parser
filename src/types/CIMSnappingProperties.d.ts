/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type CIMSnappingProperties = CIMObject & {
  /**
   * Gets or sets the XY tolerance.
   */
  xyTolerance?: number;
  /**
   * Gets or sets the XY tolerance unit.
   */
  xyToleranceUnit?: SnapXYToleranceUnit;
  /**
   * Gets or sets the Z tolerance.
   */
  zTolerance?: number;
  /**
   * Gets or sets a value indicating whether Z tolerance is enabled.
   */
  zToleranceEnabled?: boolean;
  /**
   * Gets or sets a value indicating whether snapping to the sketch is enabled.
   */
  snapToSketchEnabled?: boolean;
  /**
   * Gets or sets the snap request type.
   */
  snapRequestType?: SnapRequestType;
  /**
   * Gets or sets geometric feedback color.
   */
  geometricFeedbackColor?: null | CIMColor;
  /**
   * Gets or sets the visual feedback color.
   */
  visualFeedbackColor?: null | CIMColor;
  /**
   * Gets or sets a value indicating whether Z snapping is enabled.
   */
  isZSnappingEnabled?: boolean;
  /**
   * Gets or sets a value indicating whether the snap tip is fully or partially visible.
   */
  snapTipDisplayParts?: number;
};
/**
 * Snap XY tolerance units.
 *
 */
export type SnapXYToleranceUnit = 0 | 1;
/**
 * Snap request types.
 *
 */
export type SnapRequestType = 0 | 1 | 2 | 3;
export type CIMColor = CIMObject & {
  /**
   * Gets and sets alpha.
   */
  alpha?: number;
  /**
   * Gets or sets the color spaced used defined by an ICC color profile.
   */
  colorSpace?: null | CIMColorSpace;
  /**
   * Gets or sets the values for the color and alpha channels as defined by the color model. Alpha is the last value in the array for all colors.
   */
  values?: number[] | null;
};
export type CIMColorSpace = CIMObject;

/**
 * Represents the base CIM object class.
 *
 */
export interface CIMObject {}
