/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Illumination source types.
 *
 */
export type IlluminationSource = 0 | 1 | 2 | 3;

/**
 * Represents illumination properties.
 *
 */
export interface CIMIlluminationProperties {
  /**
   * Gets or sets the ambient light value.
   */
  ambientLight?: number;
  /**
   * Gets or sets the sun position X.
   */
  sunPositionX?: number;
  /**
   * Gets or sets the sun position Y.
   */
  sunPositionY?: number;
  /**
   * Gets or sets the sun position Z.
   */
  sunPositionZ?: number;
  /**
   * Gets or sets a value indicating whether or not to show atmospheric effects.
   */
  showAtmosphericEffects?: boolean;
  /**
   * Gets or sets a value indicating whether or not to show shadows in 3D.
   */
  showShadows3D?: boolean;
  /**
   * Gets or sets the time instant.
   */
  dateTime?: null | TimeInstant;
  /**
   * Gets or sets the illumination source.
   */
  illuminationSource?: IlluminationSource;
  /**
   * Gets or sets the sun azimuth.
   */
  sunAzimuth?: number;
  /**
   * Gets or sets the sun altitude.
   */
  sunAltitude?: number;
  /**
   * Gets or sets a value indicating whether to show the stars and the atmospheric halo for a global scene.
   */
  showStars?: boolean;
  /**
   * Gets or sets a value indicating whether to enable ambient occlusion for a scene or map.
   */
  enableAmbientOcclusion?: boolean;
  /**
   * Gets or sets a value indicating whether to enable eye-dome lighting for a scene or map.
   */
  enableEyeDomeLighting?: boolean;
}
/**
 * Represents an instant in time. The time has no duration.
 */
export interface TimeInstant {
  /**
   * Gets or sets the time zone definition of the time.
   */
  timeReference?: null | TimeReference;
  /**
   * Gets or sets the time.
   */
  time?: string;
}
/**
 * Represents the time zone definition for a given date and time.
 */
export interface TimeReference {
  /**
   * Gets or sets the windows id for the time zone.
   */
  timeZoneNameID?: null | string;
  /**
   * Gets or sets a value indicating if the time reference should honor daylight savings time.
   */
  respectsDaylightSavingTime?: boolean;
  /**
   * Gets or sets a value indicating if the time reference should respect dynamic rules for adjusting with daylight savings time for specific years.
   */
  respectsDynamicAdjustmentRules?: boolean;
}
